<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jamscoco.mapper.WorksMapper">

    <sql id="selectWorksVo">
        select w.id,
               w.name,
               w.report,
               w.attachment,
               w.track_id,
               w.group_id,
               w.category_id,
               w.department_average_score,
               w.school_average_score,
               w.state,
               w.screenshot,
               w.overview,
               w.department_sort,
               w.school_sort,
               w.create_time,
               u.true_name,
               u.sno,
               u.major,
               u.email,
               u.phonenumber,
               u.level,
               d.dept_name,
               t.name as track_name,
               g.name as group_name,
               c.name as category_name
        from works as w,
             match_track as t,
             match_group as g,
             match_category as c,
             sys_user as u,
             sys_dept as d
    </sql>
    <update id="check">
        update works
        set state = #{state}
        where id = #{id}
    </update>
    <update id="updateDepartmentAverageScore">
        update works set department_average_score = #{score} where id = #{id}
    </update>
    <update id="updateSchoolAverageScore">
        update works set school_average_score = #{score} where id = #{id}
    </update>
    <update id="updateDepartmentSort">
        update works set department_sort = #{sort} where id = #{id}
    </update>
    <update id="updateSchoolSort">
        update works set school_sort = #{sort} where id = #{id}
    </update>
    <update id="exchangeSchoolSort">
        UPDATE works AS a
            JOIN works AS b ON a.id = #{id1} AND b.id = #{id2}
        SET a.school_sort = b.school_sort, b.school_sort = a.school_sort
    </update>
    <update id="exchangeDepartmentSort">
        UPDATE works AS a
            JOIN works AS b ON a.id = #{id1} AND b.id = #{id2}
        SET a.department_sort = b.department_sort, b.department_sort = a.department_sort
    </update>
    <update id="setState">
        UPDATE works set state = #{state} where id = #{id}
    </update>

    <select id="selectWorksList" parameterType="com.jamscoco.domain.Works" resultType="com.jamscoco.vo.WorkInfo">
        <include refid="selectWorksVo"/>
        <where>
            and w.track_id = t.id
            and w.group_id = g.id
            and w.category_id = c.id
            and w.user_id = u.user_id
            and u.dept_id = d.dept_id
            <if test="name != null  and name != ''">and w.name like concat('%', #{name}, '%')</if>
            <if test="trackId != null  and trackId != ''">and w.track_id = #{trackId}</if>
            <if test="groupId != null  and groupId != ''">and w.group_id = #{groupId}</if>
            <if test="categoryId != null  and categoryId != ''">and w.category_id = #{categoryId}</if>
            <if test="state != null ">and w.state = #{state}</if>
            <if test="deptId != null ">and u.dept_id = #{deptId}</if>
            <if test="matchId != null ">and w.match_id = #{matchId}</if>
        </where>
    </select>

    <select id="getWorkInfoById" resultType="com.jamscoco.vo.WorkInfo">
        <include refid="selectWorksVo"/>
        <where>
            w.id = #{id}
            and w.track_id = t.id
            and w.group_id = g.id
            and w.category_id = c.id
            and w.user_id = u.user_id
            and u.dept_id = d.dept_id
        </where>
    </select>

    <select id="waitReviewWorksDepartment" resultType="java.lang.String">
        select w.id
        from works w
                 left join sys_user u on w.user_id = u.user_id
        where u.dept_id = #{deptId}
          and w.match_id = #{matchId}
          and w.state = 1
    </select>

    <select id="waitReviewWorksSchool" resultType="java.lang.String">
        select works.id
        from works
        where works.state = 2
          and works.match_id = #{matchId}
    </select>

    <select id="selectNextIdOnUpSchoolSort" resultType="java.lang.String">
        SELECT id
        FROM works
        WHERE school_sort <![CDATA[ < ]]>
              (SELECT school_sort FROM works WHERE id = #{workId} ORDER BY school_sort DESC limit 1)
    </select>

    <select id="selectNextIdOnDownSchoolSort" resultType="java.lang.String">
        SELECT id
        FROM works
        WHERE school_sort <![CDATA[ > ]]>
              (SELECT school_sort FROM works WHERE id = #{workId} ORDER BY school_sort ASC limit 1)
    </select>

    <select id="selectNextIdOnUpDepartment" resultType="java.lang.String">
        SELECT id
        FROM works
        WHERE department_sort <![CDATA[ < ]]>
              (SELECT department_sort FROM works WHERE id = #{workId} ORDER BY department_sort DESC limit 1)
    </select>

    <select id="selectNextIdOnDownDepartment" resultType="java.lang.String">
        SELECT id
        FROM works
        WHERE department_sort <![CDATA[ > ]]>
              (SELECT department_sort FROM works WHERE id = #{workId} ORDER BY department_sort ASC limit 1)
    </select>


</mapper>
