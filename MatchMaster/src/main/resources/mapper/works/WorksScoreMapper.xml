<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jamscoco.mapper.WorksScoreMapper">

    <sql id="selectWorksScoreVo">
        select ws.id, ws.work_id, ws.user_id, w.name, su.true_name, ws.score_detail,sd.dept_name,w.department_sort
        from works_score as ws
                 left join works w on w.id = ws.work_id
                 left join sys_user su on ws.user_id = su.user_id
                 left join sys_user us on w.user_id = us.user_id
                 left join sys_dept sd on sd.dept_id = us.dept_id
    </sql>
    <update id="setScoreDetails">
        update works_score
        set score_detail = #{details}
        where id = #{id}
    </update>

    <select id="selectWorksScoreList" parameterType="com.jamscoco.dto.ScoreDto" resultType="com.jamscoco.vo.ScoreVo">
        <include refid="selectWorksScoreVo"/>
        <where>
            w.match_id = #{matchId}
            and ws.type = #{type}
            and ws.user_id = #{userId}
            <if test="workName != null  and workName != ''"> and w.name like concat('%', #{workName}, '%')</if>
        </where>
    </select>

    <select id="check" resultType="java.lang.Integer">
        select count(*)
        from works_score as ws
        where ws.work_id = #{id}
          and ws.type = #{type}
    </select>

    <select id="getReviewDetails" resultType="com.jamscoco.vo.ScoreVo">
        <include refid="selectWorksScoreVo"/>
        where w.match_id = #{matchId}
        and ws.type = #{type} and ws.create_by = #{username}
        order by ws.work_id
    </select>
    <select id="selectScoreDetailsByWorkByType" resultType="java.lang.String">
        select score_detail from works_score where work_id = #{workId} and type = #{type}
    </select>
    <select id="selectGoalDetailByWork" resultType="com.jamscoco.vo.ScoreVo">
        <include refid="selectWorksScoreVo"/>
        where w.id = #{workId} and ws.type = #{type}
    </select>

</mapper>
